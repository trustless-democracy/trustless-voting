function i(i){return i&&i.__esModule?i.default:i}function e(i,e,t,n){Object.defineProperty(i,e,{get:t,set:n,enumerable:!0,configurable:!0})}var t=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire8d7b;t.register("43Uiq",(function(n,o){e(n.exports,"getOpenloginDefaultOptions",(()=>c)),e(n.exports,"OpenloginAdapter",(()=>d));var r=t("l6Jtl"),s=t("g5Zhu"),a=t("gfWQS"),l=t("bvXyF"),h=t("bgFCw");const c=()=>({adapterSettings:{network:r.OPENLOGIN_NETWORK.MAINNET,clientId:"",uxMode:r.UX_MODE.POPUP},loginSettings:{}});function g(i,e){var t=Object.keys(i);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(i);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(i,e).enumerable}))),t.push.apply(t,n)}return t}function p(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?g(Object(n),!0).forEach((function(t){i(s)(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):g(Object(n)).forEach((function(i){Object.defineProperty(e,i,Object.getOwnPropertyDescriptor(n,i))}))}return e}class d extends a.BaseAdapter{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};super(e),i(s)(this,"name",a.WALLET_ADAPTERS.OPENLOGIN),i(s)(this,"adapterNamespace",a.ADAPTER_NAMESPACES.MULTICHAIN),i(s)(this,"type",a.ADAPTER_CATEGORY.IN_APP),i(s)(this,"openloginInstance",null),i(s)(this,"status",a.ADAPTER_STATUS.NOT_READY),i(s)(this,"currentChainNamespace",a.CHAIN_NAMESPACES.EIP155),i(s)(this,"openloginOptions",void 0),i(s)(this,"loginSettings",{loginProvider:""}),i(s)(this,"privKeyProvider",null),this.setAdapterSettings(p(p({},e.adapterSettings),{},{chainConfig:e.chainConfig,clientId:e.clientId||"",sessionTime:e.sessionTime,web3AuthNetwork:e.web3AuthNetwork,useCoreKitKey:e.useCoreKitKey})),this.loginSettings=e.loginSettings||{loginProvider:""}}get chainConfigProxy(){return this.chainConfig?p({},this.chainConfig):null}get provider(){var i;return(null===(i=this.privKeyProvider)||void 0===i?void 0:i.provider)||null}set provider(i){throw new Error("Not implemented")}async init(i){if(super.checkInitializationRequirements(),!this.clientId)throw a.WalletInitializationError.invalidParams("clientId is required before openlogin's initialization");if(!this.openloginOptions)throw a.WalletInitializationError.invalidParams("openloginOptions is required before openlogin's initialization");let e=!1;if(this.openloginOptions.uxMode===r.UX_MODE.REDIRECT||this.openloginOptions.uxMode===r.UX_MODE.SESSIONLESS_REDIRECT){const i=(0,r.getHashQueryParams)();Object.keys(i).length>0&&i._pid&&(e=!0)}this.openloginOptions=p(p({},this.openloginOptions),{},{replaceUrlOnRedirect:e}),this.openloginInstance=new(0,r.default)(p(p({},this.openloginOptions),{},{clientId:this.clientId,network:this.openloginOptions.network||this.web3AuthNetwork||r.OPENLOGIN_NETWORK.MAINNET})),a.log.debug("initializing openlogin adapter init"),await this.openloginInstance.init(),this.status=a.ADAPTER_STATUS.READY,this.emit(a.ADAPTER_EVENTS.READY,a.WALLET_ADAPTERS.OPENLOGIN);try{a.log.debug("initializing openlogin adapter");this._getFinalPrivKey()&&(i.autoConnect||e)&&(this.rehydrated=!0,await this.connect())}catch(i){a.log.error("Failed to connect with cached openlogin provider",i),this.emit("ERRORED",i)}}async connect(){let i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{loginProvider:""};super.checkConnectionRequirements(),this.status=a.ADAPTER_STATUS.CONNECTING,this.emit(a.ADAPTER_EVENTS.CONNECTING,p(p({},i),{},{adapter:a.WALLET_ADAPTERS.OPENLOGIN}));try{return await this.connectWithProvider(i),this.provider}catch(i){if(a.log.error("Failed to connect with openlogin provider",i),this.status=a.ADAPTER_STATUS.READY,this.emit(a.ADAPTER_EVENTS.ERRORED,i),null!=i&&i.message.includes("user closed popup"))throw a.WalletLoginError.popupClosed();if(i instanceof a.Web3AuthError)throw i;throw a.WalletLoginError.connectionError("Failed to login with openlogin")}}async disconnect(){let i=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};if(this.status!==a.ADAPTER_STATUS.CONNECTED)throw a.WalletLoginError.notConnectedError("Not connected with wallet");if(!this.openloginInstance)throw a.WalletInitializationError.notReady("openloginInstance is not ready");await this.openloginInstance.logout(),i.cleanup?(this.status=a.ADAPTER_STATUS.NOT_READY,this.openloginInstance=null,this.privKeyProvider=null):this.status=a.ADAPTER_STATUS.READY,this.rehydrated=!1,this.emit(a.ADAPTER_EVENTS.DISCONNECTED)}async authenticateUser(){if(this.status!==a.ADAPTER_STATUS.CONNECTED)throw a.WalletLoginError.notConnectedError("Not connected with wallet, Please login/connect first");return{idToken:(await this.getUserInfo()).idToken}}async getUserInfo(){if(this.status!==a.ADAPTER_STATUS.CONNECTED)throw a.WalletLoginError.notConnectedError("Not connected with wallet");if(!this.openloginInstance)throw a.WalletInitializationError.notReady("openloginInstance is not ready");return await this.openloginInstance.getUserInfo()}setAdapterSettings(i){super.setAdapterSettings(i);const e=c();a.log.info("setting adapter settings",i),this.openloginOptions=p(p(p({},e.adapterSettings),this.openloginOptions),i),i.web3AuthNetwork&&(this.openloginOptions.network=i.web3AuthNetwork),void 0!==i.useCoreKitKey&&(this.openloginOptions.useCoreKitKey=i.useCoreKitKey)}async addChain(i){var e;let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];super.checkAddChainRequirements(t),null===(e=this.privKeyProvider)||void 0===e||e.addChain(i),this.addChainConfig(i)}async switchChain(i){var e;let t=arguments.length>1&&void 0!==arguments[1]&&arguments[1];super.checkSwitchChainRequirements(i,t),await(null===(e=this.privKeyProvider)||void 0===e?void 0:e.switchChain(i)),this.setAdapterSettings({chainConfig:this.getChainConfig(i.chainId)})}_getFinalPrivKey(){var i;if(!this.openloginInstance)return"";let e=this.openloginInstance.privKey;if(null!==(i=this.openloginOptions)&&void 0!==i&&i.useCoreKitKey){if(!this.openloginInstance.coreKitKey)throw a.WalletLoginError.coreKitKeyNotFound();e=this.openloginInstance.coreKitKey}return e}async connectWithProvider(){var e;let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{loginProvider:""};if(!this.chainConfig)throw a.WalletInitializationError.invalidParams("chainConfig is required before initialization");if(!this.openloginInstance)throw a.WalletInitializationError.notReady("openloginInstance is not ready");if(this.currentChainNamespace===a.CHAIN_NAMESPACES.SOLANA){const{SolanaPrivateKeyProvider:i}=await t("iCJH3");this.privKeyProvider=new i({config:{chainConfig:this.chainConfig}})}else if(this.currentChainNamespace===a.CHAIN_NAMESPACES.EIP155){const{EthereumPrivateKeyProvider:i}=await t("5eHHt");this.privKeyProvider=new i({config:{chainConfig:this.chainConfig}})}else{if(this.currentChainNamespace!==a.CHAIN_NAMESPACES.OTHER)throw new Error(`Invalid chainNamespace: ${this.currentChainNamespace} found while connecting to wallet`);this.privKeyProvider=new(0,l.CommonPrivateKeyProvider)}if(!this._getFinalPrivKey()||null!==(e=n.extraLoginOptions)&&void 0!==e&&e.id_token){var o;if(this.loginSettings.curve||(this.loginSettings.curve=this.currentChainNamespace===a.CHAIN_NAMESPACES.SOLANA?r.SUPPORTED_KEY_CURVES.ED25519:r.SUPPORTED_KEY_CURVES.SECP256K1),!n.loginProvider&&!this.loginSettings.loginProvider)throw a.WalletInitializationError.invalidParams("loginProvider is required for login");await this.openloginInstance.login(i(h)(this.loginSettings,n,{extraLoginOptions:p(p({},n.extraLoginOptions||{}),{},{login_hint:n.login_hint||(null===(o=n.extraLoginOptions)||void 0===o?void 0:o.login_hint)})}))}let s=this._getFinalPrivKey();if(s){if(this.currentChainNamespace===a.CHAIN_NAMESPACES.SOLANA){const{getED25519Key:i}=await t("hl2wQ");s=i(s).sk.toString("hex")}await this.privKeyProvider.setupProvider(s),this.status=a.ADAPTER_STATUS.CONNECTED,this.emit(a.ADAPTER_EVENTS.CONNECTED,{adapter:a.WALLET_ADAPTERS.OPENLOGIN,reconnected:this.rehydrated})}}}})),t.register("iCJH3",(function(i,e){i.exports=Promise.all([import("./"+t("27Lyk").resolve("dHHbY")),import("./"+t("27Lyk").resolve("1TvTv"))]).then((()=>t("5iwia")))})),t.register("5eHHt",(function(i,e){i.exports=import("./"+t("27Lyk").resolve("lbY2V")).then((()=>t("2Ha7f")))})),t.register("hl2wQ",(function(i,e){i.exports=Promise.all([import("./"+t("27Lyk").resolve("dHHbY")),import("./"+t("27Lyk").resolve("bwM3s"))]).then((()=>t("8e2Ug")))}));
//# sourceMappingURL=openloginAdapter.esm.1a20d49a.js.map

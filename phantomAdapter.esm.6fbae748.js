function t(t){return t&&t.__esModule?t.default:t}function e(t,e,i,n){Object.defineProperty(t,e,{get:i,set:n,enumerable:!0,configurable:!0})}var i=("undefined"!=typeof globalThis?globalThis:"undefined"!=typeof self?self:"undefined"!=typeof window?window:"undefined"!=typeof global?global:{}).parcelRequire8d7b;i.register("aAd2m",(function(n,o){e(n.exports,"PhantomAdapter",(()=>d));var a=i("g5Zhu"),r=i("gfWQS"),s=i("ab5xn"),h=i("5iwia");function l(t,e,i){return new Promise(((n,o)=>{i>0?setTimeout((async()=>{const a=await t();a&&n(a),a||l(t,e,i-1).then((t=>(n(t),t))).catch((t=>o(t)))}),e):n(!1)}))}const c=async function(){var t;let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{interval:1e3,count:3};if("undefined"!=typeof window&&!(null===(t=window.solana)||void 0===t||!t.isPhantom))return window.solana;return await l((()=>{var t;return null===(t=window.solana)||void 0===t?void 0:t.isPhantom}),e.interval,e.count)?window.solana:null};class d extends s.BaseSolanaAdapter{constructor(){super(...arguments),t(a)(this,"name",r.WALLET_ADAPTERS.PHANTOM),t(a)(this,"adapterNamespace",r.ADAPTER_NAMESPACES.SOLANA),t(a)(this,"currentChainNamespace",r.CHAIN_NAMESPACES.SOLANA),t(a)(this,"type",r.ADAPTER_CATEGORY.EXTERNAL),t(a)(this,"status",r.ADAPTER_STATUS.NOT_READY),t(a)(this,"_wallet",null),t(a)(this,"phantomProvider",null),t(a)(this,"_onDisconnect",(()=>{this._wallet&&(this._wallet.off("disconnect",this._onDisconnect),this.rehydrated=!1,this.status=this.status===r.ADAPTER_STATUS.CONNECTED?r.ADAPTER_STATUS.READY:r.ADAPTER_STATUS.NOT_READY,this.emit(r.ADAPTER_EVENTS.DISCONNECTED))}))}get isWalletConnected(){var t;return!(null===(t=this._wallet)||void 0===t||!t.isConnected||this.status!==r.ADAPTER_STATUS.CONNECTED)}get provider(){var t;return(null===(t=this.phantomProvider)||void 0===t?void 0:t.provider)||null}set provider(t){throw new Error("Not implemented")}async init(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};if(await super.init(t),super.checkInitializationRequirements(),this._wallet=await c({interval:500,count:3}),!this._wallet)throw r.WalletInitializationError.notInstalled();this.phantomProvider=new(0,h.PhantomInjectedProvider)({config:{chainConfig:this.chainConfig}}),this.status=r.ADAPTER_STATUS.READY,this.emit(r.ADAPTER_EVENTS.READY,r.WALLET_ADAPTERS.PHANTOM);try{r.log.debug("initializing phantom adapter"),t.autoConnect&&(this.rehydrated=!0,await this.connect())}catch(t){r.log.error("Failed to connect with cached phantom provider",t),this.emit("ERRORED",t)}}async connect(){var t=this;try{if(super.checkConnectionRequirements(),this.status=r.ADAPTER_STATUS.CONNECTING,this.emit(r.ADAPTER_EVENTS.CONNECTING,{adapter:r.WALLET_ADAPTERS.PHANTOM}),!this._wallet)throw r.WalletInitializationError.notInstalled();if(this._wallet.isConnected)await this.connectWithProvider(this._wallet);else{const e=this._wallet._handleDisconnect;try{await new Promise(((i,n)=>{this._wallet?(this._wallet.once("connect",(async()=>{await this.connectWithProvider(this._wallet),i(this.provider)})),this._wallet._handleDisconnect=function(){n(r.WalletInitializationError.windowClosed());for(var i=arguments.length,o=new Array(i),a=0;a<i;a++)o[a]=arguments[a];return e.apply(t._wallet,o)},this._wallet.connect().catch((t=>{n(t)}))):n(r.WalletInitializationError.notInstalled())}))}catch(t){if(t instanceof r.Web3AuthError)throw t;throw r.WalletLoginError.connectionError(null==t?void 0:t.message)}finally{this._wallet._handleDisconnect=e}}if(!this._wallet.publicKey)throw r.WalletLoginError.connectionError();return this._wallet.on("disconnect",this._onDisconnect),this.provider}catch(t){throw this.status=r.ADAPTER_STATUS.READY,this.rehydrated=!1,this.emit(r.ADAPTER_EVENTS.ERRORED,t),t}}async disconnect(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{cleanup:!1};await super.disconnectSession();try{var e;await(null===(e=this._wallet)||void 0===e?void 0:e.disconnect()),t.cleanup&&(this.status=r.ADAPTER_STATUS.NOT_READY,this.phantomProvider=null,this._wallet=null),await super.disconnect()}catch(t){this.emit(r.ADAPTER_EVENTS.ERRORED,r.WalletLoginError.disconnectionError(null==t?void 0:t.message))}}async getUserInfo(){if(!this.isWalletConnected)throw r.WalletLoginError.notConnectedError("Not connected with wallet, Please login/connect first");return{}}async addChain(t){var e;let i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];super.checkAddChainRequirements(i),null===(e=this.phantomProvider)||void 0===e||e.addChain(t),this.addChainConfig(t)}async switchChain(t){var e;let i=arguments.length>1&&void 0!==arguments[1]&&arguments[1];super.checkSwitchChainRequirements(t,i),await(null===(e=this.phantomProvider)||void 0===e?void 0:e.switchChain(t)),this.setAdapterSettings({chainConfig:this.getChainConfig(t.chainId)})}async connectWithProvider(t){if(!this.phantomProvider)throw r.WalletLoginError.connectionError("No phantom provider");return await this.phantomProvider.setupProvider(t),this.status=r.ADAPTER_STATUS.CONNECTED,this.emit(r.ADAPTER_EVENTS.CONNECTED,{adapter:r.WALLET_ADAPTERS.PHANTOM,reconnected:this.rehydrated}),this.provider}}})),i.register("ab5xn",(function(n,o){e(n.exports,"BaseSolanaAdapter",(()=>s));var a=i("gfWQS"),r=i("bYkMz");class s extends a.BaseAdapter{async init(t){this.chainConfig||(this.chainConfig=(0,a.getChainConfig)(a.CHAIN_NAMESPACES.SOLANA,1))}async authenticateUser(){if(!this.provider||this.status!==a.ADAPTER_STATUS.CONNECTED)throw a.WalletLoginError.notConnectedError();const{chainNamespace:e,chainId:i}=this.chainConfig,n=await this.provider.request({method:"getAccounts"});if(n&&n.length>0){const o=(0,a.getSavedToken)(n[0],this.name);if(o){if(!(0,a.checkIfTokenIsExpired)(o))return{idToken:o}}const s={domain:window.location.origin,uri:window.location.href,address:n[0],chainId:parseInt(i,16),version:"1",nonce:Math.random().toString(36).slice(2),issuedAt:(new Date).toISOString()},h=await(0,a.signChallenge)(s,e),l=(new TextEncoder).encode(h),c=await this.provider.request({method:"signMessage",params:{message:l,display:"utf8"}}),d=await(0,a.verifySignedChallenge)(e,t(r).encode(c),h,this.name,this.sessionTime,this.clientId,this.web3AuthNetwork);return(0,a.saveToken)(n[0],this.name,d),{idToken:d}}throw a.WalletLoginError.notConnectedError("Not connected with wallet, Please login/connect first")}async disconnectSession(){super.checkDisconnectionRequirements();const t=await this.provider.request({method:"getAccounts"});t&&t.length>0&&(0,a.clearToken)(t[0],this.name)}async disconnect(){this.rehydrated=!1,this.emit(a.ADAPTER_EVENTS.DISCONNECTED)}}}));
//# sourceMappingURL=phantomAdapter.esm.6fbae748.js.map
